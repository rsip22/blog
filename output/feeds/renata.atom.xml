<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Renata's blog - Renata</title><link href="/" rel="alternate"></link><link href="/feeds/renata.atom.xml" rel="self"></link><id>/</id><updated>2017-11-12T17:49:00-02:00</updated><entry><title>Hello, world!</title><link href="/hello-world.html" rel="alternate"></link><published>2017-11-12T17:49:00-02:00</published><updated>2014-11-12T18:00:00-02:00</updated><author><name>Renata</name></author><id>tag:None,2017-11-12:/hello-world.html</id><summary type="html">&lt;p&gt;A bit about me&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Renata's picture, a white female profile touching her chin with her left hand fingertips" src="/img/author.png"&gt;&lt;/p&gt;
&lt;h3&gt;About me&lt;/h3&gt;
&lt;p&gt;Hello, world! For those I am meeting for the first time, I am a 31 years old History teacher from Brazil and I created this blog because I was selected for the &lt;a href="https://outreachy.org"&gt;Outreachy internship program&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have been leading &lt;a href="https://pyladiespoa.pythonanywhere.com"&gt;PyLadies Porto Alegre&lt;/a&gt; and helping organize &lt;a href="DJango Girls blog link"&gt;Django Girls workshops&lt;/a&gt; in my state since 2016.&lt;/p&gt;
&lt;p&gt;I like Debian a lot and it's my go-to distribution whenever I have to make a new GNU/Linux install for myself or for people I know. I've been looking into ways to contribute to it, but so far all I have done to help was working on some translations for a few Debian derivatives, like Tails.&lt;/p&gt;
&lt;p&gt;I am still working on advancing my programming skils, but I looked into the project to help with the calendar of social events and conferences and I feel like that is something I can work on, in particular because I can use Python, which is my favorite language to study. I also appreciate the need for having a good project like this developed in a way that can be useful to other free software communities.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I contribute to the Django Girls Tutorial repository by regulary reviewing the PRs sent to portuguese version (https://github.com/DjangoGirls/tutorial/commits?author=rsip22).&lt;/li&gt;
&lt;/ul&gt;</content><category term="personal"></category><category term="outreachy"></category></entry><entry><title>Creating a flat file website</title><link href="/creating-a-flat-file-website.html" rel="alternate"></link><published>2017-11-01T20:00:00-02:00</published><updated>2017-11-01T20:00:00-02:00</updated><author><name>Renata</name></author><id>tag:None,2017-11-01:/creating-a-flat-file-website.html</id><summary type="html">&lt;p&gt;How I ended up creating this site.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;About this blog&lt;/h3&gt;
&lt;p&gt;I was supposed to make a blog to report my journey through the &lt;a href="https://outreachy.org"&gt;Outreachy internship&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm biased towards systems that use flat files for blogs instead of a database. It is so much easier to make the posts available through other means (such as having them live in a Github repository) that assure their content will live on even if the site is taken down or dies. It is also so much better to have backups and to download the content this way, instead of pulling down a huge database file, which may cost a significant amount of money to pay to transfer that amount of data. Having flat files with your content with a format that is shared among many systems (such as Markdown) might also assure a smooth transition to a new system, should that become a necessity at some point.&lt;/p&gt;
&lt;p&gt;I have experimented around this a bit while working on some projects. I played with &lt;a href="https://getlektor.com"&gt;Lektor&lt;/a&gt; while contributing to &lt;a href="https://pybee.org/"&gt;PyBeeWare&lt;/a&gt;, but even though I liked it, I found it's documentation severely lacking. I worked with &lt;a href="https://getgrav.org/"&gt;Grav&lt;/a&gt; while we were trying to put Tem.blog.br back online. Grav is a good CMS and definitely an alternative to Wordpress, but, well, needs a server to set it up.&lt;/p&gt;
&lt;p&gt;At first, I thought about using &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, which is a good site generator, has a &lt;a href="https://www.codecademy.com/learn/deploy-a-website"&gt;Code Academy&lt;/a&gt; tutorial on how to create a website and deploy it to Github Pages that I have done a while ago. I tended to chose it to develop this blog, but it is written in Ruby. Which is fine, of course. The first steps I took into learning how to program were in Ruby, thanks to &lt;a href="https://pine.fm/LearnToProgram/"&gt;Chris Pine's Learn to Program&lt;/a&gt; | &lt;a href="https://www.jmonteiro.com/aprendaaprogramar/"&gt;vers√£o pt-br&lt;/a&gt;. What was my objection with Ruby, then? It is because most of the Outreachy project I will be developing with Python (and maybe some Javascript) and I thought that adding a third language might make my life a bit harder.&lt;/p&gt;
&lt;p&gt;That is how I ended up with &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I used the instructions provided by &lt;a href="https://a-slide.github.io/blog/github-pelican"&gt;Adrien Leger on &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For themes, I used &lt;a href="http://www.pelicanthemes.com/"&gt;Pelican Themes&lt;/a&gt;&lt;/p&gt;</content><category term="dev"></category><category term="outreachy"></category><category term="python"></category><category term="pelican"></category></entry><entry><title>My experience with technology in schools</title><link href="/my-experience-with-technology-in-schools.html" rel="alternate"></link><published>2017-11-01T00:00:00-02:00</published><updated>2017-11-01T00:00:00-02:00</updated><author><name>Renata</name></author><id>tag:None,2017-11-01:/my-experience-with-technology-in-schools.html</id><summary type="html">&lt;p&gt;I talk about my experience with tech in schools for the past two and a half years&lt;/p&gt;</summary><content type="html">&lt;p&gt;I got engaged with Free Software about two and a half years ago, when I started working in a school.&lt;/p&gt;
&lt;p&gt;I know a bit about the reality of working with very limited resources, specially when talking about tech.&lt;/p&gt;
&lt;p&gt;During the first semester of 2017, I did an internship in a municipal school here in Porto Alegre (that is a public school that is taken care by the city government, instead of the state government). It was an exceptional school in terms of equipment, they had a computer lab with more than 20 computers and almost as many notebooks to be used by teachers and students. All the computers in the lab ran &lt;a href="http://linuxeducacional.c3sl.ufpr.br/"&gt;Linux Educacional&lt;/a&gt; (which, I admit, was the reason I chose this particular school), a Linux distribution based on Ubuntu, funded by the Brazilian federal government to be used in public schools' computers.&lt;/p&gt;
&lt;p&gt;I have developed https://EmAula.xyz, which is a Django application to help teachers to create lesson plans and share them with their students. I made it in Django because I wanted to learn more about the framework, beyond the Django Girls tutorial which I already knew from beginning to end and because I felt confidant enough so I could help my collegue with it.
The things I remember learning the most from this project:
- Working with branches on Git (because I had to teach someone how to do it)
- Design the database relationships and how to make it work between different Django apps
- Setting up and using PostgreSQL as database
- Environment settings, so we didn't have to publicize the app's secret key and didn't have to change the database config every time
- How sometimes the OS image wasn't very much up to date on cloud providers&lt;/p&gt;</content><category term="personal"></category><category term="outreachy"></category></entry></feed>